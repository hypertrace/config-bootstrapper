version = 1
name = hypertrace_event_attributes
commands = [
  {
    upgrade: [
      {
        type: Attribute,
        action: DELETE,
        data: {
          filter = {
            scope: [EVENT]
            key: [upstreamService, downstreamServices]
          }
        }
      },
      {
        type: Attribute,
        action: ADD,
        data: {
          attributes = [
            {
              fqn: Service.id,
              key: serviceId,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Service ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE,
              definition: {
                source_path: SERVICE_ID
              }
            },
            {
              fqn: API.id,
              key: apiId,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Endpoint ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE,
              definition: {
                source_path: API_ID
              }
            },
            {
              fqn: API.name,
              key: apiName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Endpoint Name,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE,
              definition: {
                source_path: API_NAME
              }
            },
            {
              fqn: Api.Trace.id,
              key: apiTraceId,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Endpoint Trace ID,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.metrics.error_count,
              key: errorCount,
              value_kind: TYPE_INT64,
              display_name: Error Count,
              scope: EVENT,
              sources: [QS],
              type: METRIC
            },
            {
              fqn: Span.metrics.exception_count,
              key: exceptionCount,
              value_kind: TYPE_INT64,
              display_name: Exception Count,
              scope: EVENT,
              sources: [QS],
              type: METRIC
            },
            {
              fqn: Span.attributes.request_params,
              key: spanRequestParams,
              value_kind: TYPE_STRING_MAP,
              display_name: Request Params,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.request_method,
              key: spanRequestMethod,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: HTTP Method,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.protocol_name,
              key: protocolName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Protocol,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
              definition: {
                source_path: PROTOCOL
              }
            },
            {
              fqn: Span.display_entity_name,
              key: displayEntityName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Entity Name,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.request_url,
              key: spanRequestUrl,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: URL,
              scope: EVENT,
              sources: [QS],
              type: ATTRIBUTE
            },
            {
              fqn: Span.attributes.service_name,
              key: serviceName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Service Name,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                source_path: SERVICE_NAME
              }
            },
            {
              fqn: Span.attributes.domain_id,
              key: domainId,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Domain Id,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                source_path: DOMAIN_ID
              }
            },
            {
              fqn: Span.attributes.domain_name,
              key: domainName,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Domain Name,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                source_path: DOMAIN_NAME
              }
            },
            {
              fqn: Span.attributes.http_method,
              key: httpMethod,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: HTTP Method,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                first_value_present: {
                  definitions: [
                    {
                      source_path: http.request.method
                    },
                    {
                      source_path: http.method
                    }
                  ]
                }
              }
            },
            {
              fqn: Span.attributes.http_path,
              key: httpPath,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: HTTP Path,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                first_value_present: {
                  definitions: [
                    {
                      source_path: http.request.path
                    },
                    {
                      source_path: http.path
                    },
                    {
                      source_path: http.target
                    }
                  ]
                }
              }
            },
            {
              fqn: Span.attributes.http_url,
              key: httpUrl,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: HTTP Url,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                first_value_present: {
                  definitions: [
                    {
                      source_path: http.url
                    },
                    {
                      source_path: http.request.url
                    },
                    {
                      source_path: url
                    }
                  ]
                }
              }
            },
            {
              fqn: Span.attributes.api_boundary_type,
              key: apiBoundaryType,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Endpoint Boundary Type,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                source_path: API_BOUNDARY_TYPE
              }
            },
            {
              fqn: Span.attributes.api_url_pattern,
              key: apiUrlPattern,
              value_kind: TYPE_STRING,
              groupable: true,
              display_name: Api Url Pattern,
              scope: EVENT,
              sources: [QS],
              internal: true,
              type: ATTRIBUTE,
              definition: {
                source_path: API_URL_PATTERN
              }
            },

          ]
        }
      }
    ]
    rollback: [
      {
        type: Attribute,
        action: DELETE,
        data: {
          filter = {
            scope: [EVENT]
          }
        }
      }
    ]
  }
]